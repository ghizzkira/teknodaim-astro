---
import { type SelectTopic, type SelectDownload } from "@/lib/db/schema"
import DownloadCard from "@/components/Download/DownloadCard"
import DownloadDropdownTopics from "@/components/Download/DownloadDropdownTopics"
import DownloadList from "@/components/Download/DownloadList"
import DownloadSearch from "@/components/Download/DownloadSearch"
import type { LanguageType } from "@/lib/validation/language"
import Link from "@/components/Link"

interface Props {
  topics: SelectTopic[]
  games: SelectDownload[]
  apps: SelectDownload[]
  downloads: SelectDownload[]
  locale: LanguageType
}

const { topics, games, apps, downloads, locale } = Astro.props
---

<div
  class="fade-up-element mx-auto flex w-full flex-col max-[991px]:px-4 md:max-[991px]:max-w-[750px] min-[992px]:max-[1199px]:max-w-[970px] min-[1200px]:max-w-[1170px]"
>
  <div class="flex flex-col rounded-md bg-muted/10 p-5">
    <div class="flex items-center justify-between gap-2">
      <div class="flex space-x-2">
        <DownloadDropdownTopics
          locale={locale}
          topics={topics!}
          title="Categories"
        />
      </div>
      <div>
        <DownloadSearch />
      </div>
    </div>
  </div>

  <div class="w-full px-4">
    <div class={"my-2 flex flex-row justify-between"}>
      <h2>Games</h2>
      <Link
        locale={locale}
        aria-label="See More Download"
        href="/download/game/"
      >
        <p class="text-primary">See more</p>
      </Link>
    </div>
    <DownloadList downloads={games!} />
  </div>
  <div class="w-full px-4">
    <div class={"my-2 flex flex-row justify-between"}>
      <h2>Apps</h2>
      <Link
        locale={locale}
        aria-label="See More Download"
        href="/download/app/"
      >
        <p class="text-primary">See more</p>
      </Link>
    </div>
    <DownloadList downloads={apps!} />
  </div>
  <div class="w-full px-4">
    <div class={"my-2 flex flex-row justify-start"}>
      <h2>Newest</h2>
    </div>
    <div class="mb-4 grid grid-cols-2 gap-4 sm:grid-cols-3 lg:grid-cols-5">
      {
        downloads?.map((download) => {
          return <DownloadCard download={download} />
        })
      }
    </div>
  </div>
</div>
