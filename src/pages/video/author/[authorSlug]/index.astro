---
import { Icon } from "@/components/UI/Icon"
import JsonLdScript from "@/components/JsonLdScript"
import InfiniteScollVideoEmbedByAuthor from "@/components/VideoEmbed/InfiniteScrollVideoEmbedByAuthor"
import MainLayout from "@/layouts/MainLayout.astro"
import { getUserByUsername } from "@/lib/action/user"
import { formatDate } from "@/lib/utils/date"
import { Image } from "astro:assets"

const DB = Astro.locals.runtime.env.DB
const { authorSlug } = Astro.params

const user = await getUserByUsername(DB, authorSlug!)

if (!user) {
  return Astro.redirect("/404")
}

const breadcrumbJson = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  itemListElement: [
    {
      "@type": "ListItem",
      position: 1,
      name: import.meta.env.PUBLIC_SITE_TITLE,
      item: import.meta.env.PUBLIC_SITE_URL,
    },
    {
      "@type": "ListItem",
      position: 2,
      name: "Video",
      item: `${import.meta.env.PUBLIC_SITE_URL}/video`,
    },
    {
      "@type": "ListItem",
      position: 3,
      name: user?.name,
      item: `${import.meta.env.PUBLIC_SITE_URL}/video/author/${authorSlug}`,
    },
  ],
}
---

<MainLayout
  locale="id"
  seo={{
    title: user?.name!,
    description: user?.name!,
    canonical: `${import.meta.env.PUBLIC_SITE_URL}/video/author/${authorSlug}`,
    openGraph: {
      basic: {
        title: `Download | `,
        url: `${import.meta.env.PUBLIC_SITE_URL}/video/author/${authorSlug}`,
        type: "website",
        image: "",
      },
      optional: {
        description: user?.name!,
        locale: "ID",
      },
    },
  }}
  type="video"
>
  <JsonLdScript jsonld={JSON.stringify(breadcrumbJson)} />
  <div
    class="fade-up-element mt-5 flex w-full flex-col items-center space-y-3 md:px-4"
  >
    <div class="mx-4 w-full rounded border border-border p-4">
      <div class="flex items-center justify-between">
        <div class="flex flex-1 flex-col items-center space-x-7 lg:flex-row">
          {
            user?.image ? (
              <div class="relative h-[100px] w-[100px] overflow-hidden rounded-full border-2 border-border shadow">
                <Image
                  src={user?.image}
                  alt={user?.name!}
                  class="object-cover"
                  width={100}
                  height={100}
                />
              </div>
            ) : (
              <Icon.User
                aria-label="User"
                className="bg-muted/61 h-[100px] w-[100px] rounded-full border-2 border-border object-cover p-2 text-foreground/80 shadow"
              />
            )
          }
          <div class="flex flex-1 flex-col space-y-1">
            <h2>{user?.name}</h2>
            <p class="text-sm">@{user?.username}</p>
            <p class="max-w-sm">{user?.about}</p>
          </div>
        </div>
      </div>
      <div class="mt-3 flex items-center justify-center text-sm">
        <Icon.Calendar aria-label="Member" className="mr0 h-4 w-4" />
        <p>
          Member since
          {formatDate(user?.createdAt as unknown as string, "LL")}
        </p>
      </div>
    </div>
    <div class="flex w-full flex-col">
      <div class="my-1 flex flex-row items-center justify-between">
        <h3 class="px-2 text-2xl">Videos</h3>
      </div>
      <section class="w-full">
        <InfiniteScollVideoEmbedByAuthor locale="id" authorId={user?.id!} />
      </section>
    </div>
  </div>
</MainLayout>
