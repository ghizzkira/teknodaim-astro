---
import DashboardTranslateTopicForm from "@/components/Dashboard/Topic/DashboardTranslateTopicForm"
import DashboardLayout from "@/layouts/DashboardLayout.astro"
import { getTopciTranslationById } from "@/lib/action/topic"
import { LANGUAGE_TYPE, type LanguageType } from "@/lib/validation/language"

const user = Astro.locals.user
const DB = Astro.locals.runtime.env.DB
if (!user?.role?.includes("admin" || "author")) {
  return Astro.redirect("/")
}
const { topicTranslationId, language } = Astro.params

if (!LANGUAGE_TYPE.includes(language as LanguageType)) {
  return Astro.redirect("/404")
}
const topicTranslation = await getTopciTranslationById(DB, topicTranslationId!)

if (!topicTranslation) {
  return Astro.redirect("/404")
}
const otherLanguageTopic = topicTranslation?.topics.find(
  (topic) => topic.language === language,
)

if (otherLanguageTopic) {
  return Astro.redirect(`/dashboard/topic/edit/${otherLanguageTopic.id}`)
}

const beforeTranslatedTopic = topicTranslation?.topics.find(
  (topic) => topic.language !== language,
)
---

<DashboardLayout
  locale="id"
  seo={{
    title: "Translate Topic",
    description: "Translate Topic",
    canonical: `${import.meta.env.PUBLIC_SITE_URL}/dashboard/topic/translate/${language}/${topicTranslationId}`,
    openGraph: {
      basic: {
        title: `Translate Topic | `,
        url: `${import.meta.env.PUBLIC_SITE_URL}/dashboard/topic/translate/${language}/${topicTranslationId}`,
        type: "website",
        image: "",
      },
      optional: {
        description: "Translate Topic",
        locale: "ID",
      },
    },
  }}
>
  <DashboardTranslateTopicForm
    topicTranslationId={topicTranslationId!}
    language={language as LanguageType}
    visibility={beforeTranslatedTopic?.visibility}
    type={beforeTranslatedTopic?.type}
    client:load
  /></DashboardLayout
>
