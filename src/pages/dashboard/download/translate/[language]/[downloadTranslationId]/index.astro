---
import DashboardTranslateDownloadForm from "@/components/Dashboard/Download/DashboardTranslateDownloadForm"
import DashboardLayout from "@/layouts/DashboardLayout.astro"
import { getDownloadTranslationById } from "@/lib/action/download"
import { LANGUAGE_TYPE, type LanguageType } from "@/lib/validation/language"

const user = Astro.locals.user
const DB = Astro.locals.runtime.env.DB
if (!user?.role?.includes("admin" || "author")) {
  return Astro.redirect("/")
}
const { downloadTranslationId, language } = Astro.params

if (!LANGUAGE_TYPE.includes(language as LanguageType)) {
  return Astro.redirect("/404")
}
const downloadTranslation = await getDownloadTranslationById(
  DB,
  downloadTranslationId!,
)

if (!downloadTranslation) {
  return Astro.redirect("/404")
}
const otherLanguageDownload = downloadTranslation?.downloads?.find(
  (download) => download.language === language,
)

if (otherLanguageDownload) {
  return Astro.redirect(`/dashboard/download/edit/${otherLanguageDownload.id}`)
}

const selectedDownload = downloadTranslation?.downloads?.find(
  (download) => download.language !== language,
)
---

<DashboardLayout
  locale="id"
  seo={{
    title: "Translate Download",
    description: "Translate Download",
    canonical: `${import.meta.env.PUBLIC_SITE_URL}/dashboard/download/translate/${language}/${downloadTranslationId}`,
    openGraph: {
      basic: {
        title: `Translate Download | `,
        url: `${import.meta.env.PUBLIC_SITE_URL}/dashboard/download/translate/${language}/${downloadTranslationId}`,
        type: "website",
        image: "",
      },
      optional: {
        description: "Translate Download",
        locale: "ID",
      },
    },
  }}
>
  <DashboardTranslateDownloadForm
    downloadTranslationId={downloadTranslationId!}
    download={selectedDownload!}
    language={language as LanguageType}
    client:load
  /></DashboardLayout
>
