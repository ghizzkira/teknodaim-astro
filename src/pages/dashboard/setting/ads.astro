---
import { Button } from "@/components/UI/Button"
import { Textarea } from "@/components/UI/Textarea"
import DashboardLayout from "@/layouts/DashboardLayout.astro"
import { getSettingByKey } from "@/lib/action/setting"

const user = Astro.locals.user
const DB = Astro.locals.runtime.env.DB
const data = await getSettingByKey(DB, "ads_txt")

let settings

if (data) {
  const parsedData = JSON.parse(data.value)
   settings = { ...parsedData }
}
if (!user?.role.includes("admin" || "author")) {
 return Astro.redirect("/")
}
---

<DashboardLayout
  locale="id"
  seo={{
    title: "Ads.txt Setting",
    description: "Ads.txt Setting",
    canonical: `${import.meta.env.PUBLIC_SITE_URL}/dashboard/setting/ads`,
    openGraph: {
      basic: {
        title: `Ads.txt Setting | `,
        url: `${import.meta.env.PUBLIC_SITE_URL}/dashboard/setting/ads`,
        type: "website",
        image: "",
      },
      optional: {
        description: "Ads.txt Setting",
        locale: "ID",
      },
    },
  }}
>
  <div class="mx-4 flex w-full flex-col">
    <div class="mb-[100px] mt-4 flex items-end justify-end">
      <div class="flex-1 space-y-4">
        <h1>Ads.txt Settings</h1>
        <hr />
        <form id="form-ads-txt" method="POST">
          <div class="space-y-3 mb-3">
            <label>ads.txt data</label>
            <Textarea
              id="ads_txt"
              name="ads_txt"
              defaultValue={settings.ads_txt}
              className="max-w-xl"
              placeholder="Enter ads.txt"
              required
            />
          </div>

          <Button aria-label="Submit"> Submit </Button>
        </form>
      </div>
    </div>
  </div>
</DashboardLayout>
<script type="module" is:inline>
  const formEl = document.getElementById("form-ads-txt")

  if (formEl) {
    formEl.addEventListener("submit", function (event) {
      event.preventDefault()

      const adsTxt = document.getElementById("ads_txt").value

      const keyValues = {
        key: "ads_txt",
        value: JSON.stringify({ ads_txt: adsTxt }),
      }
     await fetch("/api/setting/upsert", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(keyValues),
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.error) {
            document.dispatchEvent(
              new CustomEvent("showNotification", {
                detail: {
                  message: "somthing error went updating ads.txt",
                  type: "warning",
                },
              }),
            )
          } else {
             document.dispatchEvent(
              new CustomEvent("showNotification", {
                detail: {
                  message: "ads.txt has been updated",
                  type: "success",
                }, // success, warning, danger
              }),
            )
          }
        })
        .catch((error) => {
          console.error("Error:", error)
          document.dispatchEvent(
            new CustomEvent("showNotification", {
              detail: {
                message: "something error went updating ads.txt",
                type: "warning",
              },
            }),
          )
        })
    })
  }
</script>
