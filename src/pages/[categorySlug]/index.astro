---
import JsonLdScript from "@/components/JsonLdScript"
import Category from "@/components/Template/Category.astro"

import MainLayout from "@/layouts/MainLayout.astro"
import { getSettingByKey } from "@/lib/action/setting"
import { getWpPopularPostsLast7Days } from "@/lib/action/wp-popular-post"
import { wpGetCategoryBySlugAction } from "@/lib/wp/action/wp-category"
import { wpGetPostsByCategoryIdAction } from "@/lib/wp/action/wp-post"
import type { WpCategoriesDataProps } from "@/lib/wp/action/wp-types"

const DB = Astro.locals.runtime.env.DB
const { categorySlug } = Astro.params

Astro.locals.cache(60)

export const prerender = false
const { category: mainCategory, otherLangCategory } =
  await wpGetCategoryBySlugAction(categorySlug as unknown as string)

if (!mainCategory && !otherLangCategory) {
  return Astro.redirect("/404")
}
let category

if (
  mainCategory &&
  categorySlug === mainCategory.slug &&
  mainCategory.language.slug.toLocaleLowerCase() === "id"
) {
  category = mainCategory
} else if (
  otherLangCategory &&
  categorySlug === otherLangCategory.slug &&
  otherLangCategory.language.slug.toLocaleLowerCase() === "id"
) {
  category = otherLangCategory
} else if (
  mainCategory &&
  categorySlug === mainCategory.slug &&
  mainCategory.language.slug.toLocaleLowerCase() !== "id"
) {
  if (otherLangCategory) {
    return Astro.redirect(`/${otherLangCategory.slug}`)
  }
}

if (!category) {
  return Astro.redirect("/")
}

const trendingPosts = await getWpPopularPostsLast7Days(DB, {
  language: "id",
  page: 1,
  perPage: 10,
})
const categoryJsonLdString = category?.seo?.schema?.raw
const regexId = new RegExp(import.meta.env.PUBLIC_WP_DOMAIN, "g")
const regexEn = new RegExp(import.meta.env.PUBLIC_WP_EN_SUBDOMAIN, "g")
const categoryJsonLd = categoryJsonLdString
  ?.replace(regexId, import.meta.env.PUBLIC_DOMAIN)
  ?.replace(regexEn, import.meta.env.PUBLIC_EN_SUBDOMAIN)

const { posts, pageInfo } = await wpGetPostsByCategoryIdAction(
  (category as WpCategoriesDataProps)?.id,
  "",
  "ID",
)

// const adsBelowHeader = await api.ad.byPosition("topic_below_header")
// const hidePostsData = await api.setting.byKey("filter_post")

// let queriesFilter: { queries: string[] } | undefined

// if (hidePostsData) {
//   const parsedData = JSON.parse(hidePostsData.value)
//   queriesFilter = { ...parsedData }
// }
// const featuredPosts = await api.wpPopularPost.byPrimaryCategorySlug({
//   page: 1,
//   slug: categorySlug,
//   per_page: 10,
// })

const categories = await getSettingByKey(DB, "featured_categories")

let featuredCategories: WpCategoriesDataProps[] | undefined
if (categories) {
  const parsedData = JSON.parse(categories.value)
  featuredCategories = parsedData?.categories?.id
}

// const filtered_featured_posts =
//   queriesFilter?.queries &&
//   featuredPosts?.filter((post) => {
//     if (queriesFilter) {
//       for (const word of queriesFilter?.queries) {
//         if (post.title.toLowerCase().includes(word.toLocaleLowerCase())) {
//           return false
//         }
//       }
//     }
//     return true
//   })

interface AlternateLink {
  href: string
  hrefLang: string
}

const langlist = [mainCategory, otherLangCategory]
const alternatesList: AlternateLink[] = langlist.reduce(
  (acc: AlternateLink[], list) => {
    if (list?.language?.slug.toLocaleLowerCase() === "en") {
      acc.push({
        href: `${import.meta.env.PUBLIC_SITE_URL}/en/${list?.slug}`,
        hrefLang: list.language.slug,
      })
    }
    return acc
  },
  [],
)
---

<MainLayout
  locale="id"
  seo={{
    title: category?.name,
    description: category?.description,
    languageAlternates: alternatesList,
    canonical: `${import.meta.env.PUBLIC_SITE_URL}/${category?.slug}`,
    openGraph: {
      basic: {
        title: category?.name!,
        url: `${import.meta.env.PUBLIC_SITE_URL}/${category?.slug}`,
        type: "article",
        image: "",
      },
      optional: {
        description: category?.description,
        locale: "id",
      },
    },
  }}
>
  {categoryJsonLd && <JsonLdScript jsonld={categoryJsonLd} />}
  <Category
    posts={posts}
    pageInfo={pageInfo}
    category={category}
    locale="id"
    trendingPosts={trendingPosts}
    featuredCategories={featuredCategories}
  />
</MainLayout>
