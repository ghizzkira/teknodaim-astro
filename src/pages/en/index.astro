---
import JsonLdScript from "@/components/JsonLdScript"
import Homepage from "@/components/Template/Homepage.astro"
import MainLayout from "@/layouts/MainLayout.astro"
import { getSettingByKey } from "@/lib/action/setting"
import {
  getWpPopularPostsLast1Day,
  getWpPopularPostsLast7Days,
} from "@/lib/action/wp-popular-post"
import type { UpsertWpPopularPost } from "@/lib/validation/wp-popular-post"
import { wpGetAllPostsAction } from "@/lib/wp/action/wp-post"
import type { WpCategoriesDataProps } from "@/lib/wp/action/wp-types"

const DB = Astro.locals.runtime.env.DB

Astro.locals.cache(60)

const { posts, pageInfo } = await wpGetAllPostsAction("EN")
const trendingPosts = await getWpPopularPostsLast7Days(DB, {
  language: "en",
  page: 1,
  perPage: 10,
})

const data = await getSettingByKey(DB, "settings")
const dataShop = await getSettingByKey(DB, "shop_settings")

let siteSettings

if (data) {
  const parsedData = JSON.parse(data.value)
  siteSettings = { ...parsedData }
  if (dataShop) {
    const parsedDataShop = JSON.parse(dataShop.value)
    siteSettings = { ...parsedData, ...parsedDataShop }
  }
}

const filterPostData = await getSettingByKey(DB, "filter_post")
let initialFilterPost: { queries: string[] } | undefined
if (filterPostData) {
  const parsedData = JSON.parse(filterPostData.value)
  initialFilterPost = { ...parsedData }
}
const featuredPostsData = await getSettingByKey(DB, "featured_posts")
let initialFeaturedPosts: UpsertWpPopularPost[] | undefined
if (featuredPostsData) {
  const parsedData = JSON.parse(featuredPostsData.value)
  initialFeaturedPosts = parsedData?.posts?.en
}
const hotPosts = await getWpPopularPostsLast1Day(DB, {
  language: "en",
  page: 1,
  perPage: 10,
})

const featured_posts = initialFeaturedPosts
  ? initialFeaturedPosts
  : trendingPosts && trendingPosts?.length > 3
    ? trendingPosts
    : hotPosts
      ? hotPosts
      : null
const filteredFeaturedPosts = initialFilterPost?.queries
  ? featured_posts?.filter((post) => {
      if (initialFilterPost?.queries) {
        for (const word of initialFilterPost?.queries) {
          if (post.title.toLowerCase().includes(word.toLocaleLowerCase())) {
            return false
          }
        }
      }
      return true
    })
  : featured_posts

const categories = await getSettingByKey(DB, "featured_categories")

let featuredCategories: WpCategoriesDataProps[] | undefined
if (categories) {
  const parsedData = JSON.parse(categories.value)
  featuredCategories = parsedData?.categories?.en
}

const breadcrumbJson = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  itemListElement: [
    {
      "@type": "ListItem",
      position: 1,
      name: siteSettings?.siteTitle ?? import.meta.env.PUBLIC_SITE_TITLE,
      item: import.meta.env.PUBLIC_SITE_URL,
    },
  ],
}
const searchBoxJsonLd = {
  "@context": "https://schema.org",
  "@type": "WebSite",
  url: import.meta.env.PUBLIC_SITE_URL,
  potentialAction: {
    "@type": "SearchAction",
    target: `${import.meta.env.PUBLIC_SITE_URL}/search?q={search_term_string}`,
    "query-input": "required name=search_term_string",
  },
}
---

<MainLayout
  locale={"en"}
  seo={{
    title:
      siteSettings?.siteTitle ??
      import.meta.env.PUBLIC_SITE_TITLE ??
      "Teknodaim",
    description:
      siteSettings?.siteDescription ?? import.meta.env.PUBLIC_SITE_DESCRIPTION,
    titleTemplate: siteSettings?.siteTagline ?? "Everlasting Tech Knowledge",
    languageAlternates: [
      { href: `${import.meta.env.PUBLIC_SITE_URL}/`, hrefLang: "id" },
    ],
    canonical: `${import.meta.env.PUBLIC_SITE_URL}/en`,
    openGraph: {
      basic: {
        title: `${siteSettings?.siteTitle ?? import.meta.env.PUBLIC_SITE_TITLE} | `,
        url: `${import.meta.env.PUBLIC_SITE_URL}/en`,
        type: "website",
        image: "",
      },
      optional: {
        description:
          siteSettings?.siteDescription ??
          import.meta.env.PUBLIC_SITE_DESCRIPTION,
        locale: "EN",
      },
    },
  }}
>
  <JsonLdScript jsonld={JSON.stringify(breadcrumbJson)} />
  <JsonLdScript jsonld={JSON.stringify(searchBoxJsonLd)} />
  <Homepage
    locale={"en"}
    posts={posts}
    featuredPosts={filteredFeaturedPosts}
    pageInfo={pageInfo}
    trendingPosts={trendingPosts}
    featuredCategories={featuredCategories}
  />
</MainLayout>
