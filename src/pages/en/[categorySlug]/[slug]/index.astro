---
import SinglePost from "@/components/Template/SinglePost.astro"

import {
  wpGetAllPostsAction,
  // wpGetAllPostsSlugAction,
  wpGetPostBySlugAction,
  wpGetPostsByCategorySlugAction,
} from "@/lib/wp/action/wp-post"
import type { WpCategoriesDataProps } from "@/lib/wp/action/wp-types"
import { wpPrimaryCategorySlug } from "@/lib/wp/helper"
import MainLayout from "@/layouts/MainLayout.astro"
import WpPostViewCounter from "@/components/Wp/WpPostViewCounter"
import { getWpPopularPostsLast7Days } from "@/lib/action/wp-popular-post"
import JsonLdScript from "@/components/JsonLdScript"
import { getSettingByKey } from "@/lib/action/setting"

export const prerender = false
Astro.locals.cache(60)

const { categorySlug, slug } = Astro.params

const { posts } = await wpGetAllPostsAction("EN")
const { post: mainPost, otherLangPost } = await wpGetPostBySlugAction(
  slug as unknown as string,
)

if (!mainPost && !otherLangPost) {
  return Astro.redirect("/404")
}

let post

if (
  mainPost &&
  slug === mainPost.slug &&
  mainPost.language.slug.toLocaleLowerCase() === "en"
) {
  post = mainPost
} else if (
  mainPost &&
  slug === mainPost.slug &&
  mainPost.language.slug.toLocaleLowerCase() !== "en"
) {
  if (otherLangPost?.slug) {
    const { primaryCategory } = wpPrimaryCategorySlug(
      otherLangPost?.categories as WpCategoriesDataProps[],
    )
    return Astro.redirect(`/en/${primaryCategory?.slug}/${otherLangPost.slug}`)
  }
}

if (!post) {
  return Astro.redirect("/")
}

const DB = Astro.locals.runtime.env.DB

const trendingPosts = await getWpPopularPostsLast7Days(DB, {
  language: "en",
  page: 1,
  perPage: 10,
})
const regexId = new RegExp(import.meta.env.PUBLIC_WP_DOMAIN, "g")
const regexEn = new RegExp(import.meta.env.PUBLIC_WP_EN_SUBDOMAIN, "g")
const postJsonLdString = post?.seo?.schema?.raw
const postJsonLd = postJsonLdString
  ?.replace(regexId, import.meta.env.PUBLIC_DOMAIN)
  ?.replace(regexEn, import.meta.env.PUBLIC_EN_SUBDOMAIN)

const { posts: categoryPosts } = await wpGetPostsByCategorySlugAction(
  categorySlug!,
  "",
  "EN",
  post?.id,
)

const categories = await getSettingByKey(DB, "featured_categories")

let featuredCategories: WpCategoriesDataProps[] | undefined
if (categories) {
  const parsedData = JSON.parse(categories.value)
  featuredCategories = parsedData?.categories?.en
}

const { primaryCategory } = wpPrimaryCategorySlug(
  post.categories as WpCategoriesDataProps[],
)

interface AlternateLink {
  href: string
  hrefLang: string
}

const langlist = [mainPost, otherLangPost]
const alternatesList: AlternateLink[] = langlist.reduce(
  (acc: AlternateLink[], list) => {
    if (list?.language?.slug.toLocaleLowerCase() === "id") {
      acc.push({
        href: `${import.meta.env.PUBLIC_SITE_URL}/${categorySlug}/${list?.slug}`,
        hrefLang: list.language.slug,
      })
    }
    return acc
  },
  [],
)
---

<MainLayout
  locale={"en"}
  seo={{
    title: post?.title,
    description: post?.seo.metaDesc,
    languageAlternates: alternatesList,
    canonical: `${import.meta.env.PUBLIC_SITE_URL}/${categorySlug}/${slug}`,
    openGraph: {
      basic: {
        title: post?.title!,
        url: `${import.meta.env.PUBLIC_SITE_URL}/${categorySlug}/${slug}`,
        type: "article",
        image: "",
      },
      optional: {
        description: post?.seo.metaDesc,
        locale: "en",
      },
    },
  }}
>
  <WpPostViewCounter
    title={post.title}
    slug={post.slug}
    excerpt={post.excerpt}
    publishedTime={new Date(post.date).toISOString()}
    thumbnail={post.featuredImage.sourceUrl}
    primaryCategory={primaryCategory?.name!}
    primaryCategorySlug={primaryCategory?.slug!}
    authorName={post.author.name}
    authorSlug={post.author.slug}
    language={"en"}
    authorImage={post.author.avatar.url}
    client:load
  />
  {postJsonLd && <JsonLdScript jsonld={postJsonLdString} />}
  <SinglePost
    posts={posts!}
    post={post}
    trendingPosts={trendingPosts}
    categoryPosts={categoryPosts!}
    slug={slug!}
    locale={"en"}
    featuredCategories={featuredCategories}
  />
</MainLayout>
