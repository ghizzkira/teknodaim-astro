---
import JsonLdScript from "@/components/JsonLdScript"
import Download from "@/components/Template/Download.astro"
import MainLayout from "@/layouts/MainLayout.astro"
import {
  getDownloadsByLanguage,
  getDownloadsByType,
} from "@/lib/action/download"
import { getTopicsByType } from "@/lib/action/topic"

Astro.locals.cache(60)

const DB = Astro.locals.runtime.env.DB

const downloads = await getDownloadsByLanguage(DB, {
  language: "en",
  page: 1,
  perPage: 10,
})
const apps = await getDownloadsByType(DB, {
  language: "en",
  type: "app",
  page: 1,
  perPage: 10,
})
const games = await getDownloadsByType(DB, {
  language: "en",
  type: "game",
  page: 1,
  perPage: 10,
})
const topics = await getTopicsByType(DB, {
  language: "en",
  type: "download",
  page: 1,
  perPage: 10,
})

const breadcrumbJson = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  itemListElement: [
    {
      "@type": "ListItem",
      position: 1,
      name: import.meta.env.PUBLIC_SITE_TITLE,
      item: `${import.meta.env.PUBLIC_SITE_URL}/en/`,
    },
    {
      "@type": "ListItem",
      position: 2,
      name: "Download",
      item: `${import.meta.env.PUBLIC_SITE_URL}/en/download`,
    },
  ],
}
---

<MainLayout
  locale="en"
  seo={{
    title: "Download",
    description: "Download",
    languageAlternates: [
      {
        href: `${import.meta.env.PUBLIC_SITE_URL}/download`,
        hrefLang: "id",
      },
    ],
    canonical: `${import.meta.env.PUBLIC_SITE_URL}/en/download`,
    openGraph: {
      basic: {
        title: `Download | `,
        url: `${import.meta.env.PUBLIC_SITE_URL}/en/download`,
        type: "website",
        image: "",
      },
      optional: {
        description: "Download",
        locale: "EN",
      },
    },
  }}
>
  <JsonLdScript jsonld={JSON.stringify(breadcrumbJson)} />
  <Download
    topics={topics}
    games={games}
    apps={apps}
    downloads={downloads}
    locale="en"
  />
</MainLayout>
