---

import Category from "@/components/Template/Category.astro"
 
import MainLayout from "@/layouts/MainLayout.astro"
import { getWpPopularPosts } from "@/lib/action/wp-popular-post"
import { LANGUAGE_TYPE } from "@/lib/validation/language"
 import {
   wpGetCategoryBySlugAction,
} from "@/lib/wp/action/wp-category"
import {
   wpGetPostsByCategoryIdAction,
} from "@/lib/wp/action/wp-post"
import type { WpCategoriesDataProps } from "@/lib/wp/action/wp-types"

 
const DB = Astro.locals.runtime.env.DB
const { categorySlug ,locale } = Astro.params

if(!LANGUAGE_TYPE.includes(locale!)){
  return Astro.redirect('/404')
}



export const prerender = false
const { category: main_category, other_lang_category } =
  await wpGetCategoryBySlugAction(categorySlug as unknown as string)

// if (!main_category && !other_lang_category) {
//   notFound()
// }
if (!main_category && !other_lang_category) {
  return Astro.redirect('/404');
}
let category 

if (locale === "id") {
  if (
    main_category &&
    categorySlug === main_category.slug &&
    main_category.language.slug.toLocaleLowerCase() === locale
  ) {
    category = main_category
  } else if (
    other_lang_category &&
    categorySlug === other_lang_category.slug &&
    other_lang_category.language.slug.toLocaleLowerCase() === locale
  ) {
    category = other_lang_category
  } else if (
    main_category &&
    categorySlug === main_category.slug &&
    main_category.language.slug.toLocaleLowerCase() !== locale
  ) {
    if (other_lang_category)
      return Astro.redirect(`/id/${other_lang_category?.slug}`)
  }  
} else if (locale === "en") {
  if (
    main_category &&
    categorySlug === main_category.slug &&
    main_category.language.slug.toLocaleLowerCase() === locale
  ) {
    category = main_category
  } else if (
    other_lang_category &&
    categorySlug === other_lang_category.slug &&
    other_lang_category.language.slug.toLocaleLowerCase() === locale
  ) {
    category = other_lang_category
  } else if (
    main_category &&
    categorySlug === main_category.slug &&
    main_category.language.slug.toLocaleLowerCase() !== locale
  ) {
    if (other_lang_category) {
      return Astro.redirect(`/en/${other_lang_category.slug}`)
    }
  } 
}

if (!category) {
  return Astro.redirect("/")
}

// const trendingPosts = await api.wpPopularPost.last7Days({
//   language: locale,
//   page: 1,
//   per_page: 10,
// })
// FIX: to 7 days
const trendingPosts = await getWpPopularPosts(DB, {
  language: locale,
  page: 1,
  perPage: 10,
})
const categoryJsonLdString = category?.seo?.schema?.raw
const regexId = new RegExp(import.meta.env.PUBLIC_WP_DOMAIN, "g")
const regexEn = new RegExp(import.meta.env.PUBLIC_WP_EN_SUBDOMAIN, "g")
const categoryJsonLd = categoryJsonLdString
  ?.replace(regexId, import.meta.env.PUBLIC_DOMAIN)
  ?.replace(regexEn, import.meta.env.PUBLIC_EN_SUBDOMAIN)

const { posts, pageInfo } = await wpGetPostsByCategoryIdAction(
  (category as WpCategoriesDataProps)?.id,
  "",
  locale?.toLocaleUpperCase(),
)

// const adsBelowHeader = await api.ad.byPosition("topic_below_header")
// const hidePostsData = await api.setting.byKey("filter_post")

// let queriesFilter: { queries: string[] } | undefined

// if (hidePostsData) {
//   const parsedData = JSON.parse(hidePostsData.value)
//   queriesFilter = { ...parsedData }
// }
// const featuredPosts = await api.wpPopularPost.byPrimaryCategorySlug({
//   page: 1,
//   slug: categorySlug,
//   per_page: 10,
// })

// const data = await api.setting.byKey("featured_categories")

// let featuredCategories: WpCategoriesDataProps[] | undefined
// if (data) {
//   const parsedData = JSON.parse(data.value)
//   featuredCategories =
//     locale === "id" ? parsedData?.categories?.id : parsedData?.categories?.en
// }

// const filtered_featured_posts =
//   queriesFilter?.queries &&
//   featuredPosts?.filter((post) => {
//     if (queriesFilter) {
//       for (const word of queriesFilter?.queries) {
//         if (post.title.toLowerCase().includes(word.toLocaleLowerCase())) {
//           return false
//         }
//       }
//     }
//     return true
//   })
---

<MainLayout 
seo={{
  title: category?.name,
  description: category?.description,
  languageAlternates: [
    {
      href: `${import.meta.env.PUBLIC_SITE_URL}/${category?.slug}`,
      hrefLang: "id",
    },
    {
      href: `${import.meta.env.PUBLIC_EN_SITE_URL}/${category?.slug}`,
      hrefLang: "en",
    },
  ],
  canonical: `${import.meta.env.PUBLIC_SITE_URL}/${category?.slug}`,
  openGraph: {
    basic: {
      title: category?.name!,
      url: `${import.meta.env.PUBLIC_SITE_URL}/${category?.slug}`,
      type: "article",
      image: "",
    },
    optional: {
      description: category?.description,
      locale: "EN",
    },
  },
}}>
  <!-- {
    categoryJsonLd && (
      <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{ __html: categoryJsonLd }}
      />
    )
  } -->
  <Category posts={posts} pageInfo={pageInfo} category={category} locale="en" trendingPosts={trendingPosts} />
</MainLayout>
