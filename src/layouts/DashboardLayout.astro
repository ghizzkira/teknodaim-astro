---
import { SEO, type Props as SeoProps } from "astro-seo"
import { ViewTransitions } from "astro:transitions"

import "@/styles/globals.css"

import DashboardContainer from "@/components/Dashboard/DashboardContainer"
import Themes from "@/components/Theme/Themes.astro"
import type { LanguageType } from "@/lib/validation/language"
import DashboardSidebar from "@/components/Dashboard/DashboardSidebar"
import { Toaster } from "@/components/UI/Toast/Toaster"
import { getSettingByKey } from "@/lib/action/setting"

interface Props {
  seo?: SeoProps
  locale: LanguageType
}

const user = Astro.locals.user

const { seo, locale } = Astro.props
const DB = Astro.locals.runtime.env.DB

const data = await getSettingByKey(DB, "settings")
const dataShop = await getSettingByKey(DB, "shop_settings")

let siteSettings

if (data) {
  const parsedData = JSON.parse(data.value)
  siteSettings = { ...parsedData }
  if (dataShop) {
    const parsedDataShop = JSON.parse(dataShop.value)
    siteSettings = { ...parsedData, ...parsedDataShop }
  }
}
const title = seo?.title || import.meta.env.PUBLIC_SITE_TITLE
const description = seo?.description || import.meta.env.PUBLIC_SITE_DESCRIPTION
const titleTemplate = `%s | ${seo?.titleTemplate ?? siteSettings?.siteTagline ?? import.meta.env.PUBLIC_SITE_TITLE ?? ""}`
const titleDefault =
  seo?.titleDefault ??
  siteSettings?.siteTitle ??
  import.meta.env.PUBLIC_SITE_TITLE ??
  "Teknodaim"

if (!user) {
    return new Response(null, {
    status: 404,
    statusText: 'Not found'
  })
}
---

<html lang={locale}>
  <head>
    <Themes />
    <SEO
      {...seo}
      title={title}
      description={description}
      titleTemplate={titleTemplate}
      titleDefault={titleDefault}
      charset="utf-8"
      noindex={true}
    />
    <link rel="icon" type="image/svg+xml" href="/icon/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <ViewTransitions fallback="swap" />
    <script
      is:inline
      type="text/partytown"
      async
      src={`https://www.googletagmanager.com/gtag/js?id=G-P4Y1YPM7SR`}></script>
    <script is:inline type="text/partytown">
      {
        ;`
          window.dataLayer = window.dataLayer || [];
          function gtag() {
            dataLayer.push(arguments);
          }
          gtag("js", new Date());
          gtag("config", "G-P4Y1YPM7SR");
          `
      }
    </script>
  </head>
  <body class="antialiased font-400 font-sans">
    <Toaster client:load />
    <DashboardContainer client:load
      ><Fragment slot="sidebar"
        ><DashboardSidebar locale="id" user={user} client:load /></Fragment
      ><slot /></DashboardContainer
    >
  </body>
</html>
