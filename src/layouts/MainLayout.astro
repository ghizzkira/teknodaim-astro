---
import { SEO, type Props as SeoProps } from "astro-seo"

import "@/styles/globals.css"

import MainContainer from "@/components/Layout/MainContainer.astro"
import Themes from "@/components/Theme/Themes.astro"
import { getSettingByKey } from "@/lib/action/setting"
import type { LanguageType } from "@/lib/validation/language"
import { getMenuByPosition } from "@/lib/action/menu"

interface Props {
  seo?: SeoProps
  locale: LanguageType
  type?: "default" | "video" | "shorts" | "video-content"
  headerType?: "default" | "video" | "shorts" | "video-content"
}

const { seo, locale, type, headerType } = Astro.props

const user = Astro.locals.user
const DB = Astro.locals.runtime.env.DB
const data = await getSettingByKey(DB, "settings")
const menus = await getMenuByPosition(DB, "sidebar_all")
const menusByLang = await getMenuByPosition(
  DB,
  locale !== "en" ? "sidebar_all_id" : "sidebar_all_en",
)
const footerMenus = await getMenuByPosition(DB, "footer_all")
const footerMenusByLang = await getMenuByPosition(
  DB,
  locale !== "en" ? "footer_id" : "footer_en",
)

let siteSettings

if (data) {
  const parsedData = JSON.parse(data.value)
  siteSettings = { ...parsedData }
}

const title = seo?.title || import.meta.env.PUBLIC_SITE_TITLE
const description = seo?.description || import.meta.env.PUBLIC_SITE_DESCRIPTION
const titleTemplate = `%s | ${seo?.titleTemplate ?? siteSettings?.siteTitle ?? import.meta.env.PUBLIC_SITE_TITLE ?? ""}`
const titleDefault =
  seo?.titleDefault ??
  siteSettings?.siteTitle ??
  import.meta.env.PUBLIC_SITE_TITLE ??
  "Teknodaim"
---

<html lang="en">
  <head>
    <Themes />
    <SEO
      {...seo}
      title={title}
      description={description}
      titleTemplate={titleTemplate}
      titleDefault={titleDefault}
      charset="utf-8"
      noindex={true}
    />
    <link rel="icon" type="image/svg+xml" href="/icon/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script is:inline>
      const scriptElement = document.querySelector(
        `script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-1431832394500017"]`,
      )
      function addScriptTag() {
        if (!scriptElement) {
          const script = document.createElement("script")
          script.async = true
          script.src =
            "https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-1431832394500017"
          script.crossOrigin = "anonymous"
          document.body.appendChild(script)
        }
      }

      var timeoutId = setTimeout(function () {
        addScriptTag()
        window.onscroll = null
      }, 8000)

      window.onscroll = function () {
        clearTimeout(timeoutId)
        addScriptTag()
        window.onscroll = null
      }
    </script>
    <script
      is:inline
      type="text/partytown"
      async
      src={`https://www.googletagmanager.com/gtag/js?id=G-P4Y1YPM7SR`}></script>
    <script is:inline type="text/partytown">
      {
        ;`
          window.dataLayer = window.dataLayer || [];
          function gtag() {
            dataLayer.push(arguments);
          }
          gtag("js", new Date());
          gtag("config", "G-P4Y1YPM7SR");
          `
      }
    </script>
    <link
      as="image"
      rel="preload"
      fetchpriority="high"
      href={import.meta.env.PUBLIC_LOGO_URL}
    />
  </head>
  <body class="font-400 font-sans antialiased">
    <MainContainer
      menus={menus}
      menusByLang={menusByLang}
      menusFooterAll={footerMenus}
      menusFooterByLang={footerMenusByLang}
      type={type}
      headerType={headerType}
      settings={siteSettings}
      user={user}
      locale={locale}><slot /></MainContainer
    >
  </body>
</html>
